library(tidyverse)
setwd("~/tesi/FunModels/data/")
# Data set with the values and the presence absence matrix
values <- read.csv("matrix/values.csv")
# Data set with the otus and all the lat, lon etc
otus <- read.csv("cluster/otus.csv")
# We don't need all the values from "values", we are only going to keep the following
keepFromValues <- c("Orc_species", "lat", "lon", "N", "P", "K", "pH", "MaxPrec", "MinTemp")
# Data set with the otus and all the lat, lon etc
otus <- read.csv("cluster/otus.csv")
# We don't need all the values from "values", we are only going to keep the following
keepFromValues <- c("Orc_species", "lat", "lon", "N", "P", "K", "pH", "MaxPrec", "MinTemp")
# We don't need anything from envOtu, this is what we are going to keep
keepFromEnvOtus <- c("N", "P", "K", "pH", "MaxPrec", "MinTemp", "otu")
# Output file name
outName <- "misc/envVarWithFamilies.csv"
onlyValues <- select(values, all_of(keepFromValues))
# This new data frame will have the environmental variables appended at the end
envOtu <- merge(otus, onlyValues)
selected <- select(envOtu, all_of(keepFromEnvOtus))
final <- mutate(selected, family = substr(otu, 1,3)) %>%
select(-otu) %>%# Remove the otus, we don't need them anymore
distinct() # remove duplicate rows
write.csv(final, outName, row.names = F)
library(vegan)
library(tidyverse)
library(psych)
library(caret)
library(ggbiplot)
setwd("~/tesi/FunModels/data/misc/")
dataPath <- "envVarWithFamilies.csv"
outTitle=""
data <- read.csv(dataPath)
data <- drop_na(data)
datapc <- select(data, -family)
pc <- prcomp(datapc,center = T,scale. = T)
ggbiplot(pc, obs.scale = 1, var.scale = 1,
groups = data$family, ellipse = TRUE, circle = TRUE,ellipse.prob = 0.68) +
scale_color_discrete(name = '') +
theme(legend.direction = 'horizontal', legend.position = 'top')+
ggtitle(outTitle)
library(vegan)
library(tidyverse)
setwd("~/tesi/FunModels/data/misc/")
dataPath <- "envVarWithFamilies.csv"
#outPath <- "lump.jpg" # output graph
outTitle <- ""
data <- read.csv(dataPath)
dataDist <- select(data, -c("lat","lon","Orc_species", "population"))
View(data)
data <- select(data, -family)
dataMDS <-
metaMDS(data,
distance = "euclidean",
k = 3,
maxit = 999,
trymax = 500,
na.rm=T)
data <- select(data, -family) %>%
drop_na()
data <- select(data, -family) %>%
drop.na()
data <- select(data, -family) %>%
drop_na()
data <- read.csv(dataPath)
data <- select(data, -family) %>%
drop_na()
dataMDS <-
metaMDS(data,
distance = "euclidean",
k = 3,
maxit = 999,
trymax = 500,
na.rm=T)
dataMDS
stressplot(dataMDS)
grp <-data[,1]
data[,1]
grp <-data$family
library(vegan)
library(tidyverse)
setwd("~/tesi/FunModels/data/misc/")
dataPath <- "envVarWithFamilies.csv"
#outPath <- "lump.jpg" # output graph
outTitle <- ""
data <- read.csv(dataPath)
grp <-data$family
data <- select(data, -family) %>%
drop_na()
dataMDS <-
metaMDS(data,
distance = "euclidean",
k = 3,
maxit = 999,
trymax = 500,
na.rm=T)
dataMDS
dataMDS
stressplot(dataMDS)
datascores <- as.data.frame(scores(dataMDS))
scores <- cbind(as.data.frame(datascores), Orchid = grp)
centroids <- aggregate(cbind(NMDS1, NMDS2) ~ Orchid, data = scores, FUN = mean)
seg <- merge(scores, setNames(centroids, c('Orchid','oNMDS1','oNMDS2')),
by = 'Orchid', sort = FALSE)
ggplot(scores, aes(x = NMDS1, y = NMDS2, colour = Orchid)) +
geom_segment(data = seg,
mapping = aes(xend = oNMDS1, yend = oNMDS2)) + # add spiders
geom_point(data = centroids, size = 4) +                    # add centroids
geom_point() +
coord_fixed()+
theme_bw()+
theme(legend.position="right",legend.text=element_text(size=10),legend.direction='vertical')+
ggtitle(outTitle)
library(vegan)
library(tidyverse)
setwd("~/tesi/FunModels/data/misc/")
dataPath <- "envVarWithFamilies.csv"
#outPath <- "lump.jpg" # output graph
outTitle <- ""
data <- read.csv(dataPath)
grp <-data$family
data <- select(data, -family) %>%
drop_na()
dataMDS <-
metaMDS(data,
distance = "euclidean",
k = 3,
maxit = 999,
trymax = 500,
na.rm=T)
datascores <- as.data.frame(scores(dataMDS))
scores <- cbind(as.data.frame(datascores), grp = grp)
data <- read.csv(dataPath)
data <- drop_na(data)
grp <-data$family
setwd("~/tesi/FunModels/data/misc/")
dataPath <- "envVarWithFamilies.csv"
#outPath <- "lump.jpg" # output graph
outTitle <- ""
data <- read.csv(dataPath)
data <- drop_na(data)
grp <-data$family
data <- select(data, -family)
dataMDS <-
metaMDS(data,
distance = "euclidean",
k = 3,
maxit = 999,
trymax = 500,
na.rm=T)
dataMDS
stressplot(dataMDS)
datascores <- as.data.frame(scores(dataMDS))
scores <- cbind(as.data.frame(datascores), grp = grp)
centroids <- aggregate(cbind(NMDS1, NMDS2) ~ grp, data = scores, FUN = mean)
centroids <- aggregate(cbind(NMDS1, NMDS2) ~ grp, data = scores, FUN = mean)
seg <- merge(scores, setNames(centroids, c('grp','oNMDS1','oNMDS2')),
by = 'grp', sort = FALSE)
ggplot(scores, aes(x = NMDS1, y = NMDS2, colour = grp)) +
geom_segment(data = seg,
mapping = aes(xend = oNMDS1, yend = oNMDS2)) + # add spiders
geom_point(data = centroids, size = 4) +                    # add centroids
geom_point() +
coord_fixed()+
theme_bw()+
theme(legend.position="right",legend.text=element_text(size=10),legend.direction='vertical')+
ggtitle(outTitle)
ggplot(scores, aes(x = NMDS1, y = NMDS2, colour = grp)) +
ggplot(scores, aes(x = NMDS1, y = NMDS2, colour = grp)) +
#  geom_segment(data = seg,
#               mapping = aes(xend = oNMDS1, yend = oNMDS2)) + # add spiders
geom_point(data = centroids, size = 4) +                    # add centroids
geom_point() +
coord_fixed()+
theme_bw()+
theme(legend.position="right",legend.text=element_text(size=10),legend.direction='vertical')+
ggtitle(outTitle)
ggplot(scores, aes(x = NMDS1, y = NMDS2, colour = grp)) +
geom_segment(data = seg,
mapping = aes(xend = oNMDS1, yend = oNMDS2)) + # add spiders
geom_point(data = centroids, size = 4) +                    # add centroids
geom_point() +
coord_fixed()+
theme_bw()+
geom_path(size=1, linetype=2)
ggplot(scores, aes(x = NMDS1, y = NMDS2, colour = grp)) +
geom_segment(data = seg,
mapping = aes(xend = oNMDS1, yend = oNMDS2)) + # add spiders
geom_point(data = centroids, size = 4) +                    # add centroids
geom_point() +
coord_fixed()+
theme_bw()+
geom_path(size=1, linetype=1)
ggplot(scores, aes(x = NMDS1, y = NMDS2, colour = grp)) +
geom_segment(data = seg,
mapping = aes(xend = oNMDS1, yend = oNMDS2)) + # add spiders
geom_point(data = centroids, size = 4) +                    # add centroids
geom_point() +
coord_fixed()+
theme_bw()+
geom_path(size=1, linetype=1)+
stat_ellipse()
ggplot(scores, aes(x = NMDS1, y = NMDS2, colour = grp)) +
geom_segment(data = seg,
mapping = aes(xend = oNMDS1, yend = oNMDS2)) + # add spiders
geom_point(data = centroids, size = 4) +                    # add centroids
geom_point() +
coord_fixed()+
theme_bw()+
#geom_path(size=1, linetype=1)+
stat_ellipse()
ggplot(scores, aes(x = NMDS1, y = NMDS2, colour = grp)) +
#geom_segment(data = seg,
#             mapping = aes(xend = oNMDS1, yend = oNMDS2)) + # add spiders
geom_point(data = centroids, size = 4) +                    # add centroids
geom_point() +
coord_fixed()+
theme_bw()+
#geom_path(size=1, linetype=1)+
stat_ellipse()
