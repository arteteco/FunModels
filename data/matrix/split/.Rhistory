library(vegan)
library(tidyverse)
library(psych)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir = "~/tesi/FunModels/data/matrix/split/")
dataPath <- "rus.csv"
data <- read.csv(dataPath)
dataDist <- select(data, -c("lat","lon","Orc_species", "population"))
dataDist <- na.omit(dataDist)
pc <- prcomp(dataDist,center = T,scale. = T)
data <- read.csv(dataPath)
dataDist <- select(data, -c("lat","lon","Orc_species", "population"))
dataDist <- na.omit(dataDist)
pc <- prcomp(dataDist,center = T,scale. = F)
summary(pc)
install_github("vqv/ggbiplot")
library(devtools)
install_github("vqv/ggbiplot")
library(ggbiplot)
library(vegan)
library(tidyverse)
library(psych)
library(ggbiplot)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir = "~/tesi/FunModels/data/matrix/split/")
dataPath <- "rus.csv"
data <- read.csv(dataPath)
dataDist <- select(data, -c("lat","lon","Orc_species", "population"))
dataDist <- na.omit(dataDist)
pc <- prcomp(dataDist,center = T,scale. = F)
summary(pc)
ggbiplot(pc, obs.scale = 1, var.scale = 1,
groups = train$Species, ellipse = TRUE, circle = TRUE,ellipse.prob = 0.68) +
scale_color_discrete(name = '') +
theme(legend.direction = 'horizontal', legend.position = 'top')
data <- read.csv(dataPath)
dataDist <- select(data, -c("lat","lon","Orc_species", "population"))
dataDist <- na.omit(dataDist)
pc <- prcomp(dataDist,center = T,scale. = F)
summary(pc)
ggbiplot(pc, obs.scale = 1, var.scale = 1,
groups = data$Species, ellipse = TRUE, circle = TRUE,ellipse.prob = 0.68) +
scale_color_discrete(name = '') +
theme(legend.direction = 'horizontal', legend.position = 'top')
data <- read.csv(dataPath)
dataDist <- select(data, -c("lat","lon","Orc_species", "population"))
dataDist <- na.omit(dataDist)
pc <- prcomp(dataDist,center = T,scale. = F)
summary(pc)
ggbiplot(pc, obs.scale = 1, var.scale = 1,
groups = data$Orc_species, ellipse = TRUE, circle = TRUE,ellipse.prob = 0.68) +
scale_color_discrete(name = '') +
theme(legend.direction = 'horizontal', legend.position = 'top')
data <- read.csv(dataPath)
datagrp <- select(data, -c("lat","lon","population"))  %>%
na.omit()
dataDist <- select(data, -c("lat","lon","Orc_species", "population"))
dataDist <- na.omit(dataDist)
pc <- prcomp(dataDist,center = T,scale. = F)
summary(pc)
ggbiplot(pc, obs.scale = 1, var.scale = 1,
groups = datagrp$Orc_species, ellipse = TRUE, circle = TRUE,ellipse.prob = 0.68) +
scale_color_discrete(name = '') +
theme(legend.direction = 'horizontal', legend.position = 'top')
datagrp
data <- read.csv(dataPath)
datagrp <- select(data, -c("lat","lon","population"))  %>%
na.omit()
dataDist <- select(data, -c("lat","lon","Orc_species", "population"))
dataDist <- na.omit(dataDist)
# remove columns without variance
dataDist <- dataDist[,apply(dataDist, 2, var, na.rm=TRUE) != 0]
pc <- prcomp(dataDist,center = T,scale. = F)
summary(pc)
ggbiplot(pc, obs.scale = 1, var.scale = 1,
groups = datagrp$Orc_species, ellipse = TRUE, circle = TRUE,ellipse.prob = 0.68) +
scale_color_discrete(name = '') +
theme(legend.direction = 'horizontal', legend.position = 'top')
library(caret)
install.packages("caret")
library(caret)
pred <- predict(pc,datagrp)
train_1 <- data.frame(pred,train[5])
pred <- predict(pc,dataDist)
train_1 <- data.frame(pred,train[5])
train <- dataDist
pred <- predict(pc,train)
train_1 <- data.frame(pred,train[5])
pred1 <- predict(pc,test)
data <- read.csv(dataPath)
library(vegan)
library(tidyverse)
library(psych)
library(caret)
library(ggbiplot)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir = "~/tesi/FunModels/data/matrix/split/")
dataPath <- "rus.csv"
data <- read.csv(dataPath)
dataDist <- select(data, -c("lat","lon","Orc_species", "population")) %>%
na.omit()
# remove columns without variance
dataDist <- dataDist[,apply(dataDist, 2, var, na.rm=TRUE) != 0]
# partition the data set into training and testing data sets.
ind <- createDataPartition(dataDist$Orc_species,p=0.80,list = F)
dataDist$Orc_species
data <- read.csv(dataPath)
dataDist <- select(data, -c("lat","lon","population")) %>%
na.omit()
# remove columns without variance
dataDist <- dataDist[,apply(dataDist, 2, var, na.rm=TRUE) != 0]
data <- read.csv(dataPath)
dataDist <- select(data, -c("lat","lon","population")) %>%
na.omit()
# remove columns without variance
dataDist <- dataDist[,apply(dataDist, 2, var, na.rm=TRUE) != 0]
data <- read.csv(dataPath)
dataDist <- select(data, -c("lat","lon","population")) %>%
na.omit()
dataDist <- dataDist[,apply(dataDist, 2, var, na.rm=TRUE) != 0]
# partition the data set into training and testing data sets.
ind <- createDataPartition(dataDist$Orc_species,p=0.80,list = F)
train <- iris[ind,]
test <- iris[-ind,]
pc <- prcomp(train[,-5],center = T,scale. = T)
pc
summary(pc)
png("rus.png")
ggbiplot(pc, obs.scale = 1, var.scale = 1,
groups = train$Species, ellipse = TRUE, circle = TRUE,ellipse.prob = 0.68) +
scale_color_discrete(name = '') +
theme(legend.direction = 'horizontal', legend.position = 'top')
data <- read.csv(dataPath)
dataDist <- select(data, -c("lat","lon","population")) %>%
na.omit()
dataDist <- dataDist[,apply(dataDist, 2, var, na.rm=TRUE) != 0]
# partition the data set into training and testing data sets.
ind <- createDataPartition(dataDist$Orc_species,p=0.80,list = F)
train <- dataDist[ind,]
test <- dataDist[-ind,]
pc <- prcomp(train[,-5],center = T,scale. = T)
train
train[,-1]
data <- read.csv(dataPath)
dataDist <- select(data, -c("lat","lon","population")) %>%
na.omit()
dataDist <- dataDist[,apply(dataDist, 2, var, na.rm=TRUE) != 0]
# partition the data set into training and testing data sets.
ind <- createDataPartition(dataDist$Orc_species,p=0.80,list = F)
train <- dataDist[ind,]
test <- dataDist[-ind,]
pc <- prcomp(train[,-1],center = T,scale. = T)
pc <- prcomp(train[,-1],center = T,scale. = F)
pc
summary(pc)
png("rus.png")
ggbiplot(pc, obs.scale = 1, var.scale = 1,
groups = train$Orc_species, ellipse = TRUE, circle = TRUE,ellipse.prob = 0.68) +
scale_color_discrete(name = '') +
theme(legend.direction = 'horizontal', legend.position = 'top')
dataDist <- dataDist[,apply(dataDist, 2, var, na.rm=TRUE) != 0]
library(vegan)
library(tidyverse)
library(psych)
library(caret)
library(ggbiplot)
setwd("~/tesi/FunModels/data/matrix/split/")
dataPath <- "rus.csv"
library(vegan)
library(tidyverse)
library(psych)
library(caret)
library(ggbiplot)
setwd("~/tesi/FunModels/data/matrix/split/")
files <- list.files(".", pattern = "*.csv")
for(f in files){
name <- substr(f, 1,3)
dataPath <- f
plotOut <- paste("pca/", name, ".png", sep="")
data <- read.csv(dataPath)
dataDist <- select(data, -c("lat","lon","population")) %>%
na.omit()
# remove columns without variance
if (length(nearZeroVar(dataDist)) > 0) {
dataDist <- dataDist[, -nearZeroVar(dataDist)]
}
train <- dataDist
# partition the data set into training and testing data sets.
#ind <- createDataPartition(dataDist$Orc_species,p=0.80,list = F)
#train <- dataDist[ind,]
#test <- dataDist[-ind,]
pc <- prcomp(train[,-1],center = T,scale. = F)
summary(pc)
#png(plotOut)
ggbiplot(pc, obs.scale = 1, var.scale = 1,
groups = train$Orc_species, ellipse = TRUE, circle = TRUE,ellipse.prob = 0.68) +
scale_color_discrete(name = '') +
theme(legend.direction = 'horizontal', legend.position = 'top')
#dev.off()
}
for(f in files){
name <- substr(f, 1,3)
dataPath <- f
plotOut <- paste("pca/", name, ".png", sep="")
data <- read.csv(dataPath)
dataDist <- select(data, -c("lat","lon","population")) %>%
na.omit()
# remove columns without variance
if (length(nearZeroVar(dataDist)) > 0) {
dataDist <- dataDist[, -nearZeroVar(dataDist)]
}
train <- dataDist
# partition the data set into training and testing data sets.
#ind <- createDataPartition(dataDist$Orc_species,p=0.80,list = F)
#train <- dataDist[ind,]
#test <- dataDist[-ind,]
pc <- prcomp(train[,-1],center = T,scale. = F)
summary(pc)
png(plotOut)
ggbiplot(pc, obs.scale = 1, var.scale = 1,
groups = train$Orc_species, ellipse = TRUE, circle = TRUE,ellipse.prob = 0.68) +
scale_color_discrete(name = '') +
theme(legend.direction = 'horizontal', legend.position = 'top')
dev.off()
}
for(f in files){
name <- substr(f, 1,3)
dataPath <- f
plotOut <- paste("pca/", name, ".png", sep="")
plotOut
data <- read.csv(dataPath)
dataDist <- select(data, -c("lat","lon","population")) %>%
na.omit()
# remove columns without variance
if (length(nearZeroVar(dataDist)) > 0) {
dataDist <- dataDist[, -nearZeroVar(dataDist)]
}
train <- dataDist
# partition the data set into training and testing data sets.
#ind <- createDataPartition(dataDist$Orc_species,p=0.80,list = F)
#train <- dataDist[ind,]
#test <- dataDist[-ind,]
pc <- prcomp(train[,-1],center = T,scale. = F)
summary(pc)
png(plotOut)
ggbiplot(pc, obs.scale = 1, var.scale = 1,
groups = train$Orc_species, ellipse = TRUE, circle = TRUE,ellipse.prob = 0.68) +
scale_color_discrete(name = '') +
theme(legend.direction = 'horizontal', legend.position = 'top')
dev.off()
}
library(vegan)
library(tidyverse)
library(psych)
library(caret)
library(ggbiplot)
setwd("~/tesi/FunModels/data/matrix/split/")
dataPath <- "rus.csv"
plotOut <- "rus.png"
# /SETTINGS
data <- read.csv(dataPath)
dataDist <- select(data, -c("lat","lon","population")) %>%
na.omit()
if (length(nearZeroVar(dataDist)) > 0) {
dataDist <- dataDist[, -nearZeroVar(dataDist)]
}
ind <- createDataPartition(dataDist$Orc_species,p=0.80,list = F)
train <- dataDist[ind,]
test <- dataDist[-ind,]
pc <- prcomp(train[,-1],center = T,scale. = F)
pc
summary(pc)
png(plotOut)
ggbiplot(pc, obs.scale = 1, var.scale = 1,
groups = train$Orc_species, ellipse = TRUE, circle = TRUE,ellipse.prob = 0.68) +
scale_color_discrete(name = '') +
theme(legend.direction = 'horizontal', legend.position = 'top')
files
library(vegan)
library(tidyverse)
library(psych)
library(caret)
library(ggbiplot)
setwd("~/tesi/FunModels/data/matrix/split/")
files <- list.files(".", pattern = "*.csv")
files
for(f in files){
name <- substr(f, 1,3)
dataPath <- f
plotOut <- paste("pca/", name, ".png", sep="")
# /SETTINGS
data <- read.csv(dataPath)
dataDist <- select(data, -c("lat","lon","population")) %>%
na.omit()
# remove columns without variance
if (length(nearZeroVar(dataDist)) > 0) {
dataDist <- dataDist[, -nearZeroVar(dataDist)]
}
# partition the data set into training and testing data sets.
ind <- createDataPartition(dataDist$Orc_species,p=0.80,list = F)
train <- dataDist[ind,]
test <- dataDist[-ind,]
pc <- prcomp(train[,-1],center = T,scale. = F)
pc
summary(pc)
png(plotOut)
ggbiplot(pc, obs.scale = 1, var.scale = 1,
groups = train$Orc_species, ellipse = TRUE, circle = TRUE,ellipse.prob = 0.68) +
scale_color_discrete(name = '') +
theme(legend.direction = 'horizontal', legend.position = 'top')
dev.off()
}
for(f in files){
name <- substr(f, 1,3)
dataPath <- f
plotOut <- paste(name, ".png", sep="")
# /SETTINGS
data <- read.csv(dataPath)
dataDist <- select(data, -c("lat","lon","population")) %>%
na.omit()
# remove columns without variance
if (length(nearZeroVar(dataDist)) > 0) {
dataDist <- dataDist[, -nearZeroVar(dataDist)]
}
# partition the data set into training and testing data sets.
ind <- createDataPartition(dataDist$Orc_species,p=0.80,list = F)
train <- dataDist[ind,]
test <- dataDist[-ind,]
pc <- prcomp(train[,-1],center = T,scale. = F)
pc
summary(pc)
png(plotOut)
ggbiplot(pc, obs.scale = 1, var.scale = 1,
groups = train$Orc_species, ellipse = TRUE, circle = TRUE,ellipse.prob = 0.68) +
scale_color_discrete(name = '') +
theme(legend.direction = 'horizontal', legend.position = 'top')
dev.off()
}
