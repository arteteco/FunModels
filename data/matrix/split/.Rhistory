#  dataDist <- dataDist[, -nearZeroVar(dataDist)]
#}
# partition the data set into training and testing data sets.
#ind <- createDataPartition(dataDist$Orc_species,p=0.80,list = F)
#train <- dataDist[ind,]
#test <- dataDist[-ind,]
train <- dataDist
pc <- prcomp(train[,-2],center = T,scale. = T)
summary(pc)
#png(plotOut)
ggbiplot(pc, obs.scale = 1, var.scale = 1,
groups = train$Orc_species, ellipse = TRUE, circle = TRUE,ellipse.prob = 0.68) +
scale_color_discrete(name = '') +
theme(legend.direction = 'horizontal', legend.position = 'top')
#dev.off()
library(vegan)
library(tidyverse)
library(psych)
library(caret)
library(ggbiplot)
# SETTINGS
setwd("~/tesi/FunModels/data/matrix/split")
dataPath <- "seb.csv"
plotOut <- paste(substr(dataPath, 1,3), ".png", sep="")
# /SETTINGS
data <- read.csv(dataPath)
dataDist <- select(data, -c("lat","lon","population")) %>%
na.omit()
# remove columns without variance
#if (length(nearZeroVar(dataDist)) > 0) {
#  dataDist <- dataDist[, -nearZeroVar(dataDist)]
#}
# partition the data set into training and testing data sets.
#ind <- createDataPartition(dataDist$Orc_species,p=0.80,list = F)
#train <- dataDist[ind,]
#test <- dataDist[-ind,]
train <- dataDist
pc <- prcomp(train[,-2],center = T,scale. = T)
summary(pc)
#png(plotOut)
ggbiplot(pc, obs.scale = 1, var.scale = 1,
groups = train$Orc_species, ellipse = TRUE, circle = TRUE,ellipse.prob = 0.68) +
scale_color_discrete(name = '') +
theme(legend.direction = 'horizontal', legend.position = 'top')
#dev.off()
library(vegan)
library(tidyverse)
library(psych)
library(caret)
library(ggbiplot)
# SETTINGS
setwd("~/tesi/FunModels/data/matrix/split")
dataPath <- "seb.csv"
plotOut <- paste(substr(dataPath, 1,3), ".png", sep="")
# /SETTINGS
data <- read.csv(dataPath)
dataDist <- select(data, -c("lat","lon","population")) %>%
na.omit()
# remove columns without variance
#if (length(nearZeroVar(dataDist)) > 0) {
#  dataDist <- dataDist[, -nearZeroVar(dataDist)]
#}
# partition the data set into training and testing data sets.
#ind <- createDataPartition(dataDist$Orc_species,p=0.80,list = F)
#train <- dataDist[ind,]
#test <- dataDist[-ind,]
train <- dataDist
pc <- prcomp(train[,-2],center = T,scale. = T)
summary(pc)
#png(plotOut)
ggbiplot(pc, obs.scale = 1, var.scale = 1,
groups = train$Orc_species, ellipse = TRUE, circle = TRUE,ellipse.prob = 0.68) +
scale_color_discrete(name = '') +
theme(legend.direction = 'horizontal', legend.position = 'top')
#dev.off()
# SETTINGS
setwd("~/tesi/FunModels/data/matrix/split")
dataPath <- "seb.csv"
plotOut <- paste(substr(dataPath, 1,3), ".png", sep="")
data <- read.csv(dataPath)
dataDist <- select(data, -c("lat","lon","population")) %>%
na.omit()
train <- dataDist
pc <- prcomp(train[,-2],center = T,scale. = T)
train
pc <- prcomp(train, center = T,scale. = T)
train
head(train)
train[,-2]
train[2:]
train[,-2]
#!/usr/bin/env Rscript
# SETTINGS
library(vegan)
library(tidyverse)
library(psych)
library(caret)
library(ggbiplot)
setwd("~/tesi/FunModels/data/matrix/split/")
# /SETTINGS
# loop all the csv files and perform the pca
dataPath <- "seb.csv"
plotOut <- paste(name, ".png", sep="")
name <- substr(dataPath, 1,3)
# /SETTINGS
data <- read.csv(dataPath)
dataDist <- select(data, -c("lat","lon","population")) %>%
na.omit()
# remove columns without variance
if (length(nearZeroVar(dataDist)) > 0) {
dataDist <- dataDist[, -nearZeroVar(dataDist)]
}
# partition the data set into training and testing data sets.
#ind <- createDataPartition(dataDist$Orc_species,p=0.80,list = F)
#train <- dataDist[ind,]
#test <- dataDist[-ind,]
train <- dataDist
pc <- prcomp(train[,-1],center = T,scale. = T)
#png(plotOut)
ggbiplot(pc, obs.scale = 1, var.scale = 1,
groups = train$Orc_species, ellipse = TRUE, circle = TRUE,ellipse.prob = 0.68) +
scale_color_discrete(name = '') +
theme(legend.direction = 'horizontal', legend.position = 'top')
#dev.off()
ggsave(plotOut)
}
#!/usr/bin/env Rscript
# SETTINGS
library(vegan)
library(tidyverse)
library(psych)
library(caret)
library(ggbiplot)
setwd("~/tesi/FunModels/data/matrix/split/")
# /SETTINGS
# loop all the csv files and perform the pca
dataPath <- "seb.csv"
plotOut <- paste(name, ".png", sep="")
name <- substr(dataPath, 1,3)
# /SETTINGS
data <- read.csv(dataPath)
dataDist <- select(data, -c("lat","lon","population")) %>%
na.omit()
# remove columns without variance
if (length(nearZeroVar(dataDist)) > 0) {
dataDist <- dataDist[, -nearZeroVar(dataDist)]
}
# partition the data set into training and testing data sets.
#ind <- createDataPartition(dataDist$Orc_species,p=0.80,list = F)
#train <- dataDist[ind,]
#test <- dataDist[-ind,]
train <- dataDist
pc <- prcomp(train[,-1],center = T,scale. = T)
#png(plotOut)
ggbiplot(pc, obs.scale = 1, var.scale = 1,
groups = train$Orc_species, ellipse = TRUE, circle = TRUE,ellipse.prob = 0.68) +
scale_color_discrete(name = '') +
theme(legend.direction = 'horizontal', legend.position = 'top')
#dev.off()
#ggsave(plotOut)
}
#!/usr/bin/env Rscript
# SETTINGS
library(vegan)
library(tidyverse)
library(psych)
library(caret)
library(ggbiplot)
setwd("~/tesi/FunModels/data/matrix/split/")
# /SETTINGS
# loop all the csv files and perform the pca
dataPath <- "ser.csv"
plotOut <- paste(name, ".png", sep="")
name <- substr(dataPath, 1,3)
# /SETTINGS
data <- read.csv(dataPath)
dataDist <- select(data, -c("lat","lon","population")) %>%
na.omit()
# remove columns without variance
if (length(nearZeroVar(dataDist)) > 0) {
dataDist <- dataDist[, -nearZeroVar(dataDist)]
}
# partition the data set into training and testing data sets.
#ind <- createDataPartition(dataDist$Orc_species,p=0.80,list = F)
#train <- dataDist[ind,]
#test <- dataDist[-ind,]
train <- dataDist
pc <- prcomp(train[,-1],center = T,scale. = T)
#png(plotOut)
ggbiplot(pc, obs.scale = 1, var.scale = 1,
groups = train$Orc_species, ellipse = TRUE, circle = TRUE,ellipse.prob = 0.68) +
scale_color_discrete(name = '') +
theme(legend.direction = 'horizontal', legend.position = 'top')
#dev.off()
#ggsave(plotOut)
}
# settings
library(vegan)
library(tidyverse)
setwd("~/tesi/FunModels/data/matrix")
dataPath <- "lump.csv"
groupPath <- "lump.csv"
outPath <- "lump.jpg" # output graph
outTitle <- "Lumped"
# /settings
data <- read.csv(dataPath)
# Read in species matrix AND grouping variables
dataDist <- select(data, -c("lat","lon","Orc_species", "population"))
# standardize the data. Skip in case of negative values
# dataRel <- decostand(data, method = "total")
# to avoid missing too many rows with na.rm, replace NAs with the mean of the column. We'd lose about 1/3 of the data otherwise
#for(i in 1:ncol(data)){
#  data[is.na(data[,i]), i] <- mean(data[,i], na.rm = TRUE)
#}
# Distance Matrix
dataDist <-
vegdist(dataDist, method = "euclidean", na.rm=T)
dataDist <-
as.matrix(dataDist, labels = T, na.rm=T)
# NMDS
dataMDS <-
metaMDS(dataDist,
distance = "euclidean",
k = 3,
maxit = 999,
trymax = 500,
wascores = F)
dataMDS
stressplot(dataMDS)
# Plotting the data
plot(dataMDS, "sites", type="t")
colv <- c("green", "gray0", "red", "blue")
symv <- c(21,22,23,24)
png(outPath)
plot(dataMDS, main=outTitle)
with(grp,
points(dataMDS,
display = "sites",
col = "black",
pch = symv[Orc_species],
bg = colv[Orc_species]))
#Create convex hulls that highlight point clusters based on grouping dataframe
ordihull(
dataMDS,
grp$Orc_species,
display = "sites",
draw = c("polygon"),
col = NULL,
border = colv,
lty = c(1, 2, 1, 2),
lwd = 2.5
)
# Calculating centroids
# Calculating and plotting centroids of NMDS Result
scrs <- scores(dataMDS, display = "sites", "species")
cent <- aggregate(scrs ~ Orc_species, data = grp, FUN = "mean")
names(cent) [-1] <- colnames(scrs)
points(cent [,-1],
pch = c( 8 , 8 , 8, 8),
col = colv,
bg = c("black"),
lwd = 3.0,
cex = 2.0 # Plots centroids as points on ordination
)
dev.off()
scores(nmds)
scores(dataMDS)
scores(dataMDS)%>%
cbind(df)
species.scores <- as.data.frame(scores(dataMDS, "species"))
setwd("~/tesi/FunModels/data/matrix")
dataPath <- "lump.csv"
groupPath <- "lump.csv"
outPath <- "lump.jpg" # output graph
outTitle <- "Lumped"
data <- read.csv(dataPath)
dataDist <- select(data, -c("lat","lon","Orc_species", "population"))
dataDist <-
vegdist(dataDist, method = "euclidean", na.rm=T)
dataDist <-
as.matrix(dataDist, labels = T, na.rm=T)
dataMDS <-
metaMDS(dataDist,
distance = "euclidean",
k = 3,
maxit = 999,
trymax = 500,
wascores = F)
dataMDS
dataMDS$stress
write(dataMDS, "test.txt")
write(dataMDS$stress, "test.txt")
dataMDS
stressplot(dataMDS)
ord
dataDist
dataMDS <-
metaMDS(dataDist,
distance = "euclidean",
k = 3,
maxit = 999,
trymax = 500,
wascores = F)
dataMDS
ggplot() +
geom_text(data=species.scores,aes(x=NMDS1,y=NMDS2,label=species),alpha=0.5) +  # add the species labels
geom_point(data=data.scores,aes(x=NMDS1,y=NMDS2,shape=grp,colour=grp),size=3) + # add the point markers
geom_text(data=data.scores,aes(x=NMDS1,y=NMDS2,label=site),size=6,vjust=0) +  # add the site labels
scale_colour_manual(values=c("A" = "red", "B" = "blue")) +
coord_equal() +
theme_bw()
library(vegan)
library(tidyverse)
setwd("~/tesi/FunModels/data/matrix")
dataPath <- "lump.csv"
groupPath <- "lump.csv"
outPath <- "lump.jpg" # output graph
outTitle <- "Lumped"
data <- read.csv(dataPath)
dataDist <- select(data, -c("lat","lon","Orc_species", "population"))
dataDist
head(dataDist)
head(data)
data <- data[,-1]
head(data)
dataDist <- select(data, -c("lat","lon","Orc_species", "population"))
head(data)
head(dataDist)
dataDist <-
vegdist(dataDist, method = "euclidean", na.rm=T)
dataDist <-
as.matrix(dataDist, labels = T, na.rm=T)
dataDist
dataDist <- select(data, -c("lat","lon","Orc_species", "population"))
dataMDS <-
metaMDS(dataDist,
distance = "euclidean",
k = 3,
maxit = 999,
trymax = 500,
wascores = F)
dataDist <-
vegdist(dataDist, method = "euclidean", na.rm=T)
dataDist <-
as.matrix(dataDist, labels = T, na.rm=T)
dataDist
dataMDS <-
metaMDS(dataDist,
distance = "euclidean",
k = 3,
maxit = 999,
trymax = 500,
wascores = F)
dataDist
dataMDS <-
metaMDS(dataDist,
distance = "euclidean",
k = 3,
maxit = 999,
trymax = 500,
wascores = F)
dataMDS <-
metaMDS(dataDist,
distance = "euclidean",
k = 3,
maxit = 999,
trymax = 500,
wascores = F)
dataMDS
stressplot(dataMDS)
ord
dataDist <- select(data, -c("lat","lon","Orc_species", "population"))
head(dataDist)
dataMDS <-
metaMDS(dataDist,
distance = "euclidean",
k = 3,
maxit = 999,
trymax = 500,
wascores = F)
dataMDS <-
metaMDS(dataDist,
distance = "euclidean",
k = 3,
maxit = 999,
trymax = 500)
dataMDS <-
metaMDS(dataDist,
distance = "euclidean",
k = 3,
maxit = 999,
trymax = 500)
dataMDS <-
metaMDS(dataDist,
distance = "euclidean",
k = 3,
maxit = 999,
trymax = 500,
na.rm=T)
dataMDS
stressplot(dataMDS)
stressplot(dataMDS)
dataMDS <-
metaMDS(dataDist,
distance = "euclidean",
k = 3,
maxit = 999,
trymax = 500,
na.rm=T)
dataMDS
stressplot(dataMDS)
datascores <- as.data.frame(scores(dataMDS))
data[,1:2]
data[,1]
grp <-data[,1]
scores <- cbind(as.data.frame(datascores), Habitat = grp)
centroids <- aggregate(cbind(NMDS1, NMDS2) ~ Habitat, data = scores, FUN = mean)
seg <- merge(scores, setNames(centroids, c('Habitat','oNMDS1','oNMDS2')),
by = 'Habitat', sort = FALSE)
ggplot(scores, aes(x = NMDS1, y = NMDS2, colour = Habitat)) +
geom_segment(data = seg,
mapping = aes(xend = oNMDS1, yend = oNMDS2)) + # add spiders
geom_point(data = centroids, size = 4) +                    # add centroids
geom_point() +
coord_fixed()+
theme_bw()+
theme(legend.position="right",legend.text=element_text(size=10),legend.direction='vertical')
ggplot(scores, aes(x = NMDS1, y = NMDS2, colour = Habitat)) +
geom_segment(data = seg,
mapping = aes(xend = oNMDS1, yend = oNMDS2)) + # add spiders
geom_point(data = centroids, size = 4) +                    # add centroids
geom_point() +
coord_fixed()+
theme_bw()+
theme(legend.position="right",legend.text=element_text(size=10),legend.direction='vertical')+
geom_path(size=1, linetype=2)
ggplot(scores, aes(x = NMDS1, y = NMDS2, colour = Habitat)) +
#  geom_segment(data = seg,
#               mapping = aes(xend = oNMDS1, yend = oNMDS2)) + # add spiders
geom_point(data = centroids, size = 4) +                    # add centroids
geom_point() +
coord_fixed()+
theme_bw()+
theme(legend.position="right",legend.text=element_text(size=10),legend.direction='vertical')+
geom_path(size=1, linetype=2)
setwd("~/tesi/FunModels/data/matrix/split/")
dataPath <- "cer.csv"
#outPath <- "lump.jpg" # output graph
outTitle <- "Lumped"
data <- read.csv(dataPath)
data <- data[,-1]
dataDist <- select(data, -c("lat","lon","Orc_species", "population"))
data <- read.csv(dataPath)
dataDist <- select(data, -c("lat","lon","Orc_species", "population"))
dataMDS <-
metaMDS(dataDist,
distance = "euclidean",
k = 3,
maxit = 999,
trymax = 500,
na.rm=T)
dataMDS
stressplot(dataMDS)
grp <-data[,1]
datascores <- as.data.frame(scores(dataMDS))
scores <- cbind(as.data.frame(datascores), Habitat = grp)
centroids <- aggregate(cbind(NMDS1, NMDS2) ~ Habitat, data = scores, FUN = mean)
seg <- merge(scores, setNames(centroids, c('Habitat','oNMDS1','oNMDS2')),
by = 'Habitat', sort = FALSE)
ggplot(scores, aes(x = NMDS1, y = NMDS2, colour = Habitat)) +
geom_segment(data = seg,
mapping = aes(xend = oNMDS1, yend = oNMDS2)) + # add spiders
geom_point(data = centroids, size = 4) +                    # add centroids
geom_point() +
coord_fixed()+
theme_bw()+
#  theme(legend.position="right",legend.text=element_text(size=10),legend.direction='vertical')+ # adds encircle
#  geom_path(size=1, linetype=2)
annotate("text",x=NMDS.mean$MDS1,y=NMDS.mean$MDS2,label=NMDS.mean$group)
grp <-data[,1]
datascores <- as.data.frame(scores(dataMDS))
scores <- cbind(as.data.frame(datascores), Orchid = grp)
centroids <- aggregate(cbind(NMDS1, NMDS2) ~ Orchid, data = scores, FUN = mean)
seg <- merge(scores, setNames(centroids, c('Orchid','oNMDS1','oNMDS2')),
by = 'Orchid', sort = FALSE)
ggplot(scores, aes(x = NMDS1, y = NMDS2, colour = Orchid)) +
geom_segment(data = seg,
mapping = aes(xend = oNMDS1, yend = oNMDS2)) + # add spiders
geom_point(data = centroids, size = 4) +                    # add centroids
geom_point() +
coord_fixed()+
theme_bw()+
#  theme(legend.position="right",legend.text=element_text(size=10),legend.direction='vertical')+ # adds encircle
#  geom_path(size=1, linetype=2)
annotate("text",x=NMDS.mean$MDS1,y=NMDS.mean$MDS2,label=NMDS.mean$group)
ggplot(scores, aes(x = NMDS1, y = NMDS2, colour = Orchid)) +
geom_segment(data = seg,
mapping = aes(xend = oNMDS1, yend = oNMDS2)) + # add spiders
geom_point(data = centroids, size = 4) +                    # add centroids
geom_point() +
coord_fixed()+
theme_bw()+
theme(legend.position="right",legend.text=element_text(size=10),legend.direction='vertical') # adds encircle
ggplot(scores, aes(x = NMDS1, y = NMDS2, colour = Orchid)) +
geom_segment(data = seg,
mapping = aes(xend = oNMDS1, yend = oNMDS2)) + # add spiders
geom_point(data = centroids, size = 4) +                    # add centroids
geom_point() +
coord_fixed()+
theme_bw()+
theme(legend.position="right",legend.text=element_text(size=10),legend.direction='vertical')+
ggtitle("Ceratobasidiaceae")
