# Add a column population with the letters
matrLett <- letterwrap(nrow(matr))
matr$population <- matrLett
for(c in lista){
filtfam <- matr %>%
mutate(!!c := rowSums(select(., starts_with(c))))
print(filtfam[,-1])
}
View(filtfam)
View(matr)
filtfam <- data.frame()
for(c in lista){
filtfam <- matr %>%
mutate(!!c := rowSums(select(., starts_with(c))))
}
View(filtfam)
filtfam <- data.frame()
for(c in lista){
tmp <- matr %>%
mutate(!!c := rowSums(select(., starts_with(c))))
filtfam <- merge(filtfam, tmp)
}
View(filtfam)
filtfam <- matr
for(c in lista){
tmp <- matr %>%
mutate(!!c := rowSums(select(., starts_with(c))))
filtfam <- merge(filtfam, tmp)
}
View(filtfam)
for(c in lista){
tmp <- matr %>%
mutate(!!c := rowSums(select(., starts_with(c))))
for(i in 1:nrow(tmp)){
if(tmp[ncol(tmp), i] > 0){
tmp[ncol(tmp), i] <- 1
}
}
filtfam <- merge(filtfam, tmp)
}
for(c in lista){
tmp <- matr %>%
mutate(!!c := rowSums(select(., starts_with(c))))
for(i in 1:nrow(tmp)){
print(i)
}
}
for(i in 1:80{
for(i in 1:80{
for(i in 1:80){
print(i)
}
filtfam[1,2]
View(filtfam)
filtfam[1,2]
for(c in lista){
tmp <- matr %>%
mutate(!!c := rowSums(select(., starts_with(c))))
for(i in 1:nrow(tmp)){
if(tmp[i, ncol(tmp)] > 0){
tmp[i, ncol(tmp)] <- 1
}
}
filtfam <- merge(filtfam, tmp)
}
View(filtfam)
View(matr)
? merge
for(c in lista){
tmp <- matr %>%
mutate(!!c := rowSums(select(., starts_with(c))))
for(i in 1:nrow(tmp)){
if(tmp[i, ncol(tmp)] > 0){
tmp[i, ncol(tmp)] <- 1
}
}
ff <- merge(ff, tmp, all=T)
}
View(ff)
?select
'grep
?grep
?grep
?grep
?grepl
?grepl
?grepl
?grep
ff[1,1]
ff[1,1]
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir = "/home/tombom/Documents/uni/tesi/data/matrix")
library(tidyverse)
ff[1,1]
colname(ff[1])
colname(ff)[1]
colnames(ff)[1]
for(c in lista){
tmp <- matr %>%
mutate(!!c := rowSums(select(., starts_with(c))))
for(i in 1:nrow(tmp)){
if(tmp[i, ncol(tmp)] > 0){
tmp[i, ncol(tmp)] <- 1
}
}
for(i in 1:ncol(tmp)){
if(colnames(ff)[i], starts_with(c) && nchar(colnames(ff)[i]) > 3){
for(c in lista){
tmp <- matr %>%
mutate(!!c := rowSums(select(., starts_with(c))))
for(i in 1:nrow(tmp)){
if(tmp[i, ncol(tmp)] > 0){
tmp[i, ncol(tmp)] <- 1
}
}
for(i in 1:ncol(tmp)){
if(colnames(ff)[i] starts_with(c) && nchar(colnames(ff)[i]) > 3){
for(c in lista){
tmp <- matr %>%
mutate(!!c := rowSums(select(., starts_with(c))))
for(i in 1:nrow(tmp)){
if(tmp[i, ncol(tmp)] > 0){
tmp[i, ncol(tmp)] <- 1
}
}
for(i in 1:ncol(tmp)){
if(colnames(ff)[i] starts_with(c) && nchar(colnames(ff)[i]) > 3){
for(c in lista){
tmp <- matr %>%
mutate(!!c := rowSums(select(., starts_with(c))))
for(i in 1:nrow(tmp)){
if(tmp[i, ncol(tmp)] > 0){
tmp[i, ncol(tmp)] <- 1
}
}
for(i in 1:ncol(tmp)){
if(colnames(ff)[i] %in% c && nchar(colnames(ff)[i]) > 3){
tmp[, i := NULL]
}
}
ff <- merge(ff, tmp, all=T)
}
View(ff)
for(c in lista){
tmp <- matr %>%
mutate(!!c := rowSums(select(., starts_with(c))))
for(i in 1:nrow(tmp)){
if(tmp[i, ncol(tmp)] > 0){
tmp[i, ncol(tmp)] <- 1
}
}
for(i in 1:ncol(tmp)){
if(colnames(tmp)[i] %in% c && nchar(colnames(tmp)[i]) > 3){
tmp[, i := NULL]
}
}
ff <- merge(ff, tmp, all=T)
}
View(ff)
for(i in 1:ncol(ff)){
if(colnames(ff)[i] %in% "cer" && nchar(colnames(ff)[i]) > 3){
ff[, i := NULL]
}
}
View(ff)
for(i in 1:ncol(ff)){
if(colnames(ff)[i] starts_with("cer") && nchar(colnames(ff)[i]) > 3){
for(i in 1:ncol(ff)){
if(colnames(ff)[i] grepl("cer") & nchar(colnames(ff)[i]) > 3){
for(i in 1:ncol(ff)){
if(colnames(ff)[i] %in% "cer" & nchar(colnames(ff)[i]) > 3){
ff[, i := NULL]
}
}
View(ff)
for(i in 1:ncol(ff)){
if(colnames(ff)[i] %in% "cer"){
ff[, i := NULL]
}
}
for(i in 1:ncol(ff)){
if(colnames(ff)[i] %in% "cer"){
ff[, i] <- NULL
}
}
View(ff)
for(i in 1:ncol(ff)){
if(colnames(ff)[i] %in% "cer1"){
ff[, i] <- NULL
}
}
View(ff)
for(c in lista){
tmp <- matr %>%
mutate(!!c := rowSums(select(., starts_with(c))))
for(i in 1:nrow(tmp)){
if(tmp[i, ncol(tmp)] > 0){
tmp[i, ncol(tmp)] <- 1
}
}
for(i in 1:ncol(tmp)){
if(str_contains(colnames(tmp)[i], c) && nchar(colnames(tmp)[i]) > 3){
tmp[, i := NULL]
}
}
ff <- merge(ff, tmp, all=T)
}
for(c in lista){
tmp <- matr %>%
mutate(!!c := rowSums(select(., starts_with(c))))
for(i in 1:nrow(tmp)){
if(tmp[i, ncol(tmp)] > 0){
tmp[i, ncol(tmp)] <- 1
}
}
for(i in 1:ncol(tmp)){
if(contains(colnames(tmp)[i], c) && nchar(colnames(tmp)[i]) > 3){
tmp[, i := NULL]
}
}
ff <- merge(ff, tmp, all=T)
}
?grepl
for(i in 1:ncol(ff)){
if(grep("cer./*", colnames(ff)[i])){
ff[, i] <- NULL
}
}
for(i in 1:ncol(ff)){
if(grep("cer", colnames(ff)[i])){
ff[, i] <- NULL
}
}
for(i in 1:ncol(ff)){
if(grep("cer", colnames(ff)[i])){
ff[, i] <- NULL
}
}
for(i in 1:ncol(ff)){
if(grepl("cer", colnames(ff)[i])){
ff[, i] <- NULL
}
}
View(ff)
ff <- matr
for(c in lista){
tmp <- matr %>%
mutate(!!c := rowSums(select(., starts_with(c))))
for(i in 1:nrow(tmp)){
if(tmp[i, ncol(tmp)] > 0){
tmp[i, ncol(tmp)] <- 1
}
}
ff <- merge(ff, tmp, all=T)
}
test <- ff
test <- ff
for(i in 1:ncol(test)){
if(grepl("cer./*", colnames(test)[i])){
test[, i] <- NULL
}
}
View(test)
test <- ff
for(i in 1:ncol(test)){
if(grepl("cer.", colnames(test)[i])){
test[, i] <- NULL
}
}
View(test)
test <- ff
for(i in 1:ncol(test)){
if(grepl("cer.", colnames(test)[i])){
test[, i] <- NULL
}
}
View(test)
for(i in 1:ncol(test)){
if(grepl("cer.", colnames(test)[i])){
print(test[, i])
}
}
ncol(test)
print(colnames(test)[1])
print(colnames(test)[2])
print(colnames(test)[3])
for(i in 1:ncol(test)){
if(grepl("cer.", colnames(test)[i])){
print(colnames(test)[i])
}
}
test <- ff
for(i in 1:ncol(test)){
if(grepl("cer.", colnames(test)[i])){
print(colnames(test)[i])
}
}
test <- ff
for(i in 1:ncol(test)){
if(grepl("cer.", colnames(test)[i])){
subset(test, -select=colnames(test)[i])
for(i in 1:ncol(test)){
if(grepl("cer.", colnames(test)[i])){
subset(test, select=-colnames(test)[i])
}
}
test <- ff
for(i in 1:ncol(test)){
if(grepl("cer.", colnames(test)[i])){
name <- colnames(test)[i]
test <- subset(test, select = - name)
}
}
test <- ff
for(i in 1:ncol(test)){
if(grepl("cer.", colnames(test)[i])){
name <- colnames(test)[[i]]
test <- subset(test, select = - name)
}
}
test <- ff
for(i in 1:ncol(test)){
if(grepl("cer.", colnames(test)[i])){
name <- colnames(test)[[i]]
test <- subset(test, select = - c(name))
}
}
for(i in 1:ncol(test)){
if(grepl("cer.", colnames(test)[i])){
name <- colnames(test)[[i]]
test <- select(test, -name)
}
}
View(test)
test <- ff
for(i in 1:ncol(test)){
if(grepl("cer.", colnames(test)[i])){
name <- colnames(test)[[i]]
test <- select(test, -name)
}
}
View(test)
test <- ff
for(i in 1:ncol(test)){
if(grepl("cer.", colnames(test)[i])){
name <- colnames(test)[[i]]
test <- select(test, -eval(name))
}
}
View(test)
test <- ff
for(i in 1:ncol(test)){
if(grepl("cer.", colnames(test)[i])){
name <- colnames(test)[[i]]
test[ , !(names(test) %in% name)]
}
}
View(test)
test <- ff
for(i in 1:ncol(test)){
if(grepl("cer.", colnames(test)[i])){
name <- c(colnames(test)[[i]])
test[ , !(names(test) %in% name)]
}
}
View(test)
test <- ff
for(i in 1:ncol(test)){
if(grepl("cer.", colnames(test)[i])){
name <- c(colnames(test)[[i]])
within(test, rm(name))
}
}
View(test)
test <- ff
for(i in 1:ncol(test)){
if(grepl("cer.", colnames(test)[i])){
name <- c(colnames(test)[[i]])
within(test, rm(name))
}
}
View(test)
test <- ff
for(i in 1:ncol(test)){
if(grepl("cer.", colnames(test)[i])){
name <- c(colnames(test)[[i]])
within(test, rm(name))
}
}
View(test)
test <- ff
for(i in 1:ncol(test)){
if(grepl("cer.", colnames(test)[i])){
name <- colnames(test)[[i]]
within(test, rm(name))
}
}
test <- ff
for(i in 1:ncol(test)){
if(grepl("cer.", colnames(test)[i])){
within(test, rm(colnames(test)[[i]]))
}
}
test <- ff
for(i in 1:ncol(test)){
if(grepl("cer.", colnames(test)[i])){
within(test, rm(colnames(test)[i]))
}
}
test <- ff
for(i in 1:ncol(test)){
if(grepl("cer.", colnames(test)[i])){
test[ , !colnames(test) %in% colnames(test)[i]]
}
}
View(test)
test <- ff
for(i in 1:ncol(test)){
if(grepl("cer", colnames(test)[i])){
test[ , !colnames(test) %in% colnames(test)[i]]
}
}
View(test)
test <- ff
for(i in 1:ncol(test)){
if(grepl("cer", colnames(test)[i])){
print(colnames(test)[i])
#test[ , !colnames(test) %in% colnames(test)[i]]
}
}
View(test)
test <- ff
todel<- c()
for(i in 1:ncol(test)){
if(grepl("cer", colnames(test)[i])){
todel <- c(todel, colnames(test)[i])
#test[ , !colnames(test) %in% colnames(test)[i]]
}
}
View(todel)
test <- ff
todel<- c()
for(i in 1:ncol(test)){
if(grepl("cer.", colnames(test)[i])){
todel <- c(todel, colnames(test)[i])
#test[ , !colnames(test) %in% colnames(test)[i]]
}
}
View(todel)
test <- select(test, -todel)
View(test)
test <- ff
for(i in 1:ncol(test)){
if(grepl("ino.", colnames(test)[i])){
todel <- c(todel, colnames(test)[i])
#test[ , !colnames(test) %in% colnames(test)[i]]
}
}
test <- select(test, -todel)
View(test)
test <- ff
for(i in 1:ncol(test)){
if(grepl("rus.", colnames(test)[i])){
todel <- c(todel, colnames(test)[i])
#test[ , !colnames(test) %in% colnames(test)[i]]
}
}
test <- select(test, -todel)
View(test)
test <- ff
for(i in 1:ncol(test)){
if(grepl("seb.", colnames(test)[i])){
todel <- c(todel, colnames(test)[i])
#test[ , !colnames(test) %in% colnames(test)[i]]
}
}
test <- select(test, -todel)
View(test)
test <- ff
for(i in 1:ncol(test)){
if(grepl("ser.", colnames(test)[i])){
todel <- c(todel, colnames(test)[i])
#test[ , !colnames(test) %in% colnames(test)[i]]
}
}
test <- select(test, -todel)
View(test)
test <- ff
for(i in 1:ncol(test)){
if(grepl("tul.", colnames(test)[i])){
todel <- c(todel, colnames(test)[i])
#test[ , !colnames(test) %in% colnames(test)[i]]
}
}
test <- select(test, -todel)
View(test)
write.csv(test, "coalesce.csv")
library(vegan)
install.packages("vegan")
knitr::opts_chunk$set(echo = TRUE)
library(vegan)
library(tidyverse)
install.packages("vegan")
setwd("~/tesi/FunModels/data/matrix/split")
inPath <- "rus.csv"
install.packages("vegan")
data <- read.csv(inPatch, row.names = 1)
data <- read.csv(inPath, row.names = 1)
data <- read.csv(inPath)
# Read in species matrix AND grouping variables
data <- select(data, -c("lat","lon","Orc_species", "population"))
head(data)
